plugins {
    id 'java'
    id 'dev.clojurephant.clojure'
}

version = project.mod_version
group = project.maven_group

repositories {
    mavenCentral()
    maven { url 'https://repo.clojars.org' }
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    implementation "org.clojure:clojure:${project.clojure_version}"
    testRuntimeOnly "dev.clojurephant:jovial:${project.jovial_version}"
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    withSourcesJar()
}

clojure.builds {
    main {
        reflection = "warn"

        aotAll()
        compiler {
            directLinking = true
        }
    }
}

//tasks.named('compileJava') {
//    // add clojure's compiled output onto the Java compiler output
//    classpath += files(sourceSets.main.clojure.classesDirectory)
//}

test {
    useJUnitPlatform()
}